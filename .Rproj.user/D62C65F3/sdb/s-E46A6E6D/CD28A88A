{
    "contents" : "# Callin Switzer\n# 9 Nov 2016\n## Analyze the behavior of pollinators\n## from videos that I manually classified\n## added to github\n\n\nset.seed(12345)\nipak <- function(pkg){\n     new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n     if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)\n     sapply(pkg, require, character.only = TRUE)\n}\n\npackages <- c(\"ggplot2\", \"gsheet\", 'lme4', 'plyr', 'nnet', 'viridis')\nipak(packages)\n\n# set ggplot theme\ntheme_set(theme_classic())\n\n\n# gsheet called Kalmia Bee Behavior classification\nURL = 'https://docs.google.com/spreadsheets/d/1gxAmCcwJ9zsnYxjXe2hnTowPUxTjadbBx-eXJYS4_Js/edit?usp=sharing'\n\nbeh = gsheet2tbl(URL)\n\n# discard some messed up data (labeled as discard)\ndiscRows = grep(pattern = 'discard', \n                x = tolower(apply(beh, \n                         MARGIN = 1, \n                         FUN = paste0, collapse = \"_\")))\nbeh = beh[-discRows, ]\n\n# remove lab views with captive bees\nbeh_field <-beh[beh$vid.type == 'field',]\n\n\n# visualize diversity of pollinators\ncolnames(beh_field)\nunique(beh_field$pollinatorClass)\n\n# set order of levels\nbeh_field <- within(beh_field, \n                    pollinatorClass <- factor(pollinatorClass, \n                            levels=names(sort(table(pollinatorClass), \n                                              decreasing=TRUE))))\nggplot(beh_field, aes(x = pollinatorClass)) + \n     geom_bar() + \n     labs (x = \"Insect visitor\", y = \"Frequency\") +\n     theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1), \n           axis.ticks.x=element_blank()) + \n     scale_x_discrete(labels=c(\"Bombus spp.\" = expression(\n          paste(italic(\"Bombus spp.\"))), \n          \"Xylocopa virginica\" = expression(\n               paste(italic(\"Xylocopa virginica\"))),\n          \"Apis mellifera\" = expression(\n               paste(italic(\"Apis mellifera\")))))\nggsave(filename = \"KalmiaFigures/VisitorProps.pdf\", width = 5, height = 4)\n\n# make proportion to show figure\n\npropTab <- data.frame(prop.table(table(beh_field$pollinatorClass)))\nnames(propTab) = c(\"Insect\", \"Proportion\")\npropTab\n\n# resample proportion table to get error bars\nresTab <- function(o){\n     prop.table(table(sample(beh_field$pollinatorClass, replace = TRUE)))\n}\n\nreps <- t(replicate(10000, resTab()))\ncolMeans(as.matrix(reps))\n# get 95% CI's\npropTab <- cbind(propTab, t(apply(reps, MARGIN = 2, quantile, c(0.025, 0.975))))\npropTab\nnames(propTab)[3:4] <- c(\"lower\", \"upper\")\n\nfor(ii in 1:6){\n    print(prop.test(table(beh_field$pollinator)[ii], nrow(beh_field)))\n}\n\nnrow(beh_field)\nggplot(propTab, aes(x = Insect, y = Proportion)) + \n     #geom_bar(stat = 'identity') + \n     geom_point(size = 1, color= 'grey40') + \n     geom_pointrange(aes(ymax = upper, ymin=lower), size = 0.2) + \n     labs (x = \"Insect visitor\", y = \"Proportion of visits\") +\n     ylim(c(0,1)) + \n     theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1), \n           axis.ticks.x=element_blank()) + \n     scale_x_discrete(labels=c(\"Bombus spp.\" = expression(\n          paste(italic(\"Bombus spp.\"))), \n          \"Xylocopa virginica\" = expression(\n               paste(italic(\"Xylocopa virginica\"))),\n          \"Apis mellifera\" = expression(\n               paste(italic(\"Apis mellifera\")))))\nggsave(filename = \"KalmiaFigures/VisitorProps2.pdf\", width = 5, height = 4)\n\n################################################################################\n# look only at pollinators that triggered anthers\nbeh_trig <- beh_field[!(is.na(beh_field$timeTrig1)), ]\nbeh_trig <- droplevels(beh_trig)\n\npropTab2 <- data.frame(prop.table(table(beh_trig$pollinatorClass)))\nnames(propTab2) = c(\"Insect\", \"Proportion\")\npropTab2\n\n# resample proportion table to get error bars\nresTab2 <- function(o){\n     prop.table(table(sample(beh_trig$pollinatorClass, replace = TRUE)))\n}\n\nreps <- t(replicate(10000, resTab2()))\ncolMeans(as.matrix(reps))\n# get 95% CI's\npropTab2 <- cbind(propTab2, t(apply(reps, MARGIN = 2, quantile, c(0.025, 0.975))))\npropTab2\nnames(propTab2)[3:4] <- c(\"lower\", \"upper\")\n\nggplot(propTab2, aes(x = Insect, y = Proportion)) + \n     geom_point(size = 1, color= 'grey40') + \n     geom_pointrange(aes(ymax = upper, ymin=lower), size = 0.2) + \n     labs (x = \"Insect visitor\", y = \"Proportion of visitors\\nthat triggered anthers\") +\n     theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1), \n           axis.ticks.x=element_blank()) + \n     scale_x_discrete(labels=c(\"Bombus spp.\" = expression(\n          paste(italic(\"Bombus spp.\"))), \n          \"Xylocopa virginica\" = expression(\n               paste(italic(\"Xylocopa virginica\"))),\n          \"Apis mellifera\" = expression(\n               paste(italic(\"Apis mellifera\")))))\nggsave(filename = \"KalmiaFigures/VisitorTrig.pdf\", width = 4, height = 4)\nnrow(beh_trig)\n\n\n######################################################################\n## Describe what bumblebee behaviors resulted in anther triggers\n######################################################################\n\n# make a long dataset\nnewDF <- data.frame()\nfor(ii in beh$Video){\n     tmp  = beh[beh$Video == ii , ]\n     tmp_long <- reshape(tmp, varying = c(\"timeTrig1\"    , \"trigBehavior1\" , \"trigLeg1\"     ,\n                                          \"timeTrig2\",      \"trigBehavior2\",  \"trigLeg2\"   ,\n                                          \"timeTrig3\"   ,  \"trigBehavior3\" , \"trigLeg3\"   ,\n                                          \"timeTrig4\" ,     \"trigBehavior4\" , \"trigLeg4\"   ,\n                                          \"timeTrig5\" ,    \"trigBehavior5\" , \"trigLeg5\"), \n             direction = 'long', \n             idvar = \"Video\", sep = \"\")\n     \n     tmp_long <- tmp_long[!(is.na(tmp_long$timeTrig)), ]\n     newDF <- rbind(tmp_long, newDF)\n}\n\n# make new factors\nnewDF$Beh2 <- mapvalues(newDF$trigBehavior, \n                        from = c(\"inserting proboscis\", \n                                \"flapping wings\", \n                                \"walking\" ,\n                                \"drinking\", \n                                \"collecting pollen\" , \n                                'grooming'), \n                        to = c(\"proboscis extended\", \n                               \"wings flapping\", \n                               \"wings not flapping, proboscis retracted\", \n                               \"proboscis extended\", \n                               \"wings not flapping, proboscis retracted\", \n                               \"wings not flapping, proboscis retracted\"))\n\n# use only field-observations of bumblebees\nnewDF <- newDF[newDF$vid.type == 'field' & newDF$pollinator == 'bumblebee', ]\n\n# redefine legs to just front, mid, rear, and unknown\nnewDF <- within(newDF, \n                trL2 <- mapvalues(trigLeg, from = c('right front', 'left front', \n                                                    'left mid', 'right mid'), \n                                  to = c('front leg', 'front leg', 'mid leg', 'mid leg')))\n\n\n# set order of levels\nnewDF <- within(newDF, \n                trigBehavior <- factor(trigBehavior, \n                                   levels=names(sort(table(trigBehavior), \n                                                     decreasing=TRUE))))\n\nnewDF <- within(newDF, \n                Beh2 <- factor(Beh2, \n                                       levels=names(sort(table(Beh2), \n                                                         decreasing=TRUE))))\ncolnames(newDF)\nggplot(newDF, aes(x = trigBehavior)) + \n     geom_bar()\n\nbb <- ggplot(newDF, aes(x = Beh2)) + \n     geom_bar() + \n     labs(x = \"Behavior during pollen release\") +  \n     theme(legend.position = 'none') + \n     scale_fill_viridis(option = 'viridis', discrete = TRUE)\nbb\n\nggplot(newDF, aes(x = 'Behavior that releases anther', fill = trigBehavior)) + \n     geom_bar() + \n     scale_fill_viridis(option = 'viridis', discrete = TRUE)\n\n\n\n### bootstrap to get CI's (make a plot like bb)\nvidnames = unique(newDF$Video)\nbehResamp <- function(o){\n     # resample videos\n     tmp = newDF[newDF$Video %in% sample(vidnames, replace = TRUE), c(\"Video\", \"Beh2\") ]\n     \n     # resample behaviors within each video (if there's more than one)\n     for(ii in names(table(tmp$Video))[table(tmp$Video) > 1]){\n          tmp2 = tmp[tmp$Video == ii , ]\n          tmp[tmp$Video == ii , ] =  tmp2[sample(1:nrow(tmp2), replace = TRUE), ]\n     }\n     \n     pt = prop.table(table(tmp$Beh2))\n     return(pt)\n}\n\n\n# should take about 30 seconds\nsystem.time({\n     beh_rep <- t(replicate(n = 10000, behResamp()))\n})\n\ncolMeans(as.matrix(beh_rep))\n# get 95% CI's\npropTab3 <- data.frame(cbind(prop.table(table(newDF$Beh2)), \n                  t(apply(beh_rep, MARGIN = 2, \n                          quantile, c(0.025, 0.975)))))\ncolnames(propTab3) <- c('mean', \"lower\", \"upper\")\npropTab3$Behavior <- rownames(propTab3)\npropTab3\n\n\nggplot(propTab3, aes(x = Behavior, y = mean)) + \n     #geom_point(size = 1, color= 'grey40') + \n     geom_pointrange(aes(ymax = upper, ymin=lower), size = 0.2) + \n     labs (x = \"Behavior\", y = \"Proportion of bumblebee behaviors\\nthat triggered anthers\") +\n     theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1), \n           axis.ticks.x=element_blank()) + \n     scale_x_discrete(labels=c(\"wings not flapping, proboscis retracted\" = expression(\n               paste(\"wings not flapping,\\nproboscis retracted\"))))\nggsave(filename = \"KalmiaFigures/BehaviorTrig.pdf\", width = 4, height = 4)\nlength(unique(newDF$Video))\nnrow(newDF)\n\n\n\n######################################################################\n# Describe what leg triggered the anther (in bumblebees)\n######################################################################\n\n\nunique(newDF$trigLeg)\n\nnewDF <- within(newDF, \n                trigLeg <- factor(trigLeg, \n                               levels=names(sort(table(trigLeg), \n                                                 decreasing=TRUE))))\n\nggplot(newDF, aes(x = trigLeg, fill = vid.type)) + \n     geom_bar() + \n     labs(x = \"What triggered the anther\") +\n     scale_fill_viridis(option = 'viridis', discrete = TRUE)\n\n\n\nggplot(newDF, aes(x = trL2, fill = vid.type)) + \n     geom_bar() + \n     labs(x = \"What triggered the anther\") + \n     scale_fill_viridis(option = 'viridis', discrete = TRUE)\n\n# calculate CI's for proportions\n### bootstrap to get CI's (make a plot like bb)\nvidnames = unique(newDF$Video)\nlegResamp <- function(o){\n     # resample videos\n     tmp = newDF[newDF$Video %in% sample(vidnames, replace = TRUE), c(\"Video\", \"trL2\") ]\n     \n     # resample behaviors within each video (if there's more than one)\n     for(ii in names(table(tmp$Video))[table(tmp$Video) > 1]){\n          tmp2 = tmp[tmp$Video == ii , ]\n          tmp[tmp$Video == ii , ] =  tmp2[sample(1:nrow(tmp2), replace = TRUE), ]\n     }\n     \n     pt = prop.table(table(tmp$trL2))\n     return(pt)\n}\n\n\n# should take about 30 seconds\nsystem.time({\n     leg_rep <- t(replicate(n = 10000, legResamp()))\n})\n\ncolMeans(as.matrix(leg_rep))\n# get 95% CI's\npropTab4 <- data.frame(cbind(prop.table(table(newDF$trL2)), \n                             t(apply(leg_rep, MARGIN = 2, \n                                     quantile, c(0.025, 0.975)))))\ncolnames(propTab4) <- c('mean', \"lower\", \"upper\")\npropTab4$leg <- rownames(propTab4)\npropTab4\n\npropTab4$leg <- factor(propTab4$leg, levels = c('unknown', 'front leg', 'mid leg'))\n\n### HERE\n\nggplot(propTab4, aes(x = leg, y = mean)) + \n     #geom_point(size = 1, color= 'grey40') + \n     geom_pointrange(aes(ymax = upper, ymin=lower), size = 0.2) + \n     labs (x = \"Cause of anther release\", \n           y = \"Proportion of bumblebee causes\\nthat triggered anthers\") +\n     theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1), \n           axis.ticks.x=element_blank()) + \n     ylim(c(0, 0.8))\nggsave(filename = \"KalmiaFigures/LegTrig.pdf\", width = 3, height = 4)\nlength(unique(newDF$Video))\nnrow(newDF)\ntable(newDF$pollinator)\n\n",
    "created" : 1478820545103.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1954924786",
    "id" : "CD28A88A",
    "lastKnownWriteTime" : 1478821046,
    "path" : "~/Documents/GitRepos/KalmiaCode/KalmiaBeeBehaviorAnalysis.R",
    "project_path" : "KalmiaBeeBehaviorAnalysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}